#!/usr/bin/perl
use strict;     #wymagaj inicjalizacji zmiennej przed użyciem
use warnings;   #wypisuj informacje
use Cwd;

my $niskarDirName = ".niskar/";
my $watchlistFileName = $niskarDirName . "watchlist";
my %errors = (fileErr => -2, commandErr => -1, argError => -3);

#wypisz tekst
sub printInfo
{
	print("$_[0]\n");
}

#wypisz błąd na czewono
sub printError
{
	print(STDERR "\033[31m$_[0]\033[39m\n");
}

#wypisz pomoc
sub printHelp
{
	printInfo("niskar - użycie");
	printInfo("start\n\tTworzy nowe repozytorium.");
	printInfo("watched\n\tWypisuje obserwowane pliki.");
	printInfo("watch <pliki/katalogi>\n\tDodaje podane obiekty do obserwowanych.");
}

#stwórz repozytorium
sub commandStart
{
	if(-d $niskarDirName)
	{
		printError("Katalog $niskarDirName już istnieje!");
		exit $errors{fileErr};
	}
	if(!mkdir($niskarDirName))
	{
		printError("Nie można stworzyć katalogu $niskarDirName.");
		exit $errors{fileErr};
	}
	if(!open(WATCHLIST_FILEHANDLE, ">", $watchlistFileName))
	{
		printError("Nie można stworzyć pliku $watchlistFileName.");
		exit $errors{fileErr};
	}
	close(WATCHLIST_FILEHANDLE);
	printInfo("Stworzono nowe repozytorium.");
}

#wypisz obserwowane pliki
sub commandWatched
{
	if(!open(WATCHLIST_FILEHANDLE, "<", $watchlistFileName))
	{
		printError("Nie można otworzyć $watchlistFileName.");
		exit $errors{fileErr};
	}
	while(<WATCHLIST_FILEHANDLE>)
	{
		chomp($_);
		printInfo("$_");
	}
	close(WATCHLIST_FILEHANDLE);
}

#dodaj nowy plik do obserwowanych
sub commandWatch
{
	#wczytaj pliki z argumentów
	my $argsCount = @ARGV;
	my @filesToWatch;
	for(my $i = 1; $i < $argsCount; $i++)
	{
		$filesToWatch[$i - 1] = $ARGV[$i];
	}
	my $filesCount = @filesToWatch;

	#wczytaj już obserwowane z pliku
	if(!open(WATCHLIST_FILEHANDLE, "<", $watchlistFileName))
	{
		printError("Nie można otworzyć $watchlistFileName.");
		exit $errors{fileErr};
	}
	my @watchedFiles;
	my $f = 0;
	while(<WATCHLIST_FILEHANDLE>)
	{
		chomp($_);
		$watchedFiles[$f] = $_;
		$f++;
	}
	my $watchedFilesCount = @watchedFiles;
	close(WATCHLIST_FILEHANDLE);

	#dodaj do obserwowanych patrząc na istnienie, bycie w katalogu i duplikaty
	my $currDir = cwd();
	my $k = 0; #ilość dodanych plików
	for(my $i = 0; $i < $filesCount; $i++)
	{
		my $fileIsGood = 1;
		for(my $j = 0; $j < $watchedFilesCount; $j++)
		{
			if($filesToWatch[$i] eq $watchedFiles[$j])
			{
				$fileIsGood = 0;
				last; #break;
			}
		}
		if($fileIsGood eq 1)
		{
			if(-e $filesToWatch[$i])
			{
				if(-e $currDir . "/" . $filesToWatch[$i] and index($currDir . "/" . $filesToWatch[$i], "/../") eq -1)
				{
					$watchedFiles[$k + $watchedFilesCount] = $filesToWatch[$i];
					$k++;
				}
				else
				{
					printError("Plik $filesToWatch[$i] jest poza obecnym katalogiem!");
					exit $errors{argError};
				}
			}
			else
			{
				printError("Plik $filesToWatch[$i] nie istnieje!");
				exit $errors{argError};
			}
		}
	}

	#wypisz nową listę do pliku
	if(!open(WATCHLIST_FILEHANDLE, ">", $watchlistFileName))
	{
		printError("Nie można zapisać do $watchlistFileName.");
		exit $errors{fileErr};
	}
	printInfo("Obserwowane pliki:");
	my $completeListCount = @watchedFiles;
	for(my $i = 0; $i < $completeListCount; $i++)
	{
		printInfo("$watchedFiles[$i]");
		print WATCHLIST_FILEHANDLE "$watchedFiles[$i]\n";
	}
	close(WATCHLIST_FILEHANDLE);

}

my $argsCount = @ARGV;
if($argsCount == 0)
{
    printHelp();
    exit $errors{commandErr};
}

#nie ma oficjalnego switch, a given rzuca ostrzeżenia
my $command = $ARGV[0];
if($command eq "start" and $argsCount eq 1)
{
	commandStart();
}
elsif($command eq "watched" and $argsCount eq 1)
{
	commandWatched();
}
elsif($command eq "watch")
{
	commandWatch();
}
else
{
	printHelp();
	exit $errors{commandErr};
}
